// Copyright (c) 2021-present Sparky Studios. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

namespace SparkyStudios.Audio.Amplitude;

// The type of action to perform during an event.
enum EventActionType: byte {
  // Do nothing.
  None,

  // Plays the sound collection with the given name.
  Play,

  // Pauses the sound collection with the given name.
  Pause,

  // Resumes the sound collection with the given name.
  Resume,

  // Stops the sound collection with the given name.
  Stop,

  // Seeks the sound collection with the given name at the given position.
  Seek,

  // Mutes the bus with the given name.
  Mute,

  // Mutes the bus with the given name.
  Unmute,
}

enum EventActionScope: byte {
  World,
  Entity,
}

// An action in an event. Actions are applied when an event is triggered.
table EventActionDefinition {
  // The action type.
  type:EventActionType = None;

  // Defines if the action is active o not.
  active:bool = true;

  // The list of targets on which apply the action.
  // Each target name should be in the same group (SoundCollection or Bus).
  targets:[string];

  scope:EventActionScope = Entity;
}

// An Amplitude Event.
// An event is a way to trigger a sequence of actions during the game. Those
// actions can change the playback of a given sound collection or bus.
table EventDefinition {
  // The name of the event.
  name:string;

  // The event ID.
  id:ulong;

  // The list of actions to apply when this event is triggered.
  actions:[EventActionDefinition];
}

root_type EventDefinition;

file_identifier "AMEV";
file_extension "amevent";